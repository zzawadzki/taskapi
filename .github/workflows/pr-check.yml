name: PR Checks

on:
  pull_request:
    branches:
      - main

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run Maven Checkstyle
        run: mvn checkstyle:check

      - name: Check code formatting
        run: mvn spotless:check
        continue-on-error: false

      - name: Comment on PR if formatting fails
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå **Code formatting check failed**\n\nPlease run `mvn spotless:apply` to format your code correctly.'
            })

  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run dependency vulnerability scan
        run: mvn org.owasp:dependency-check-maven:check -DfailBuildOnCVSS=7

      - name: Upload security report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: target/dependency-check-report.html

      - name: Comment on PR if vulnerabilities found
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üö® **High/Critical security vulnerabilities detected**\n\nPlease review the dependency-check report in the workflow artifacts.'
            })

  build-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: task-api:pr-${{ github.event.pull_request.number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true

      - name: Check image size
        id: image-size
        run: |
          SIZE=$(docker image inspect task-api:pr-${{ github.event.pull_request.number }} --format='{{.Size}}')
          SIZE_MB=$((SIZE / 1024 / 1024))
          echo "size_mb=$SIZE_MB" >> $GITHUB_OUTPUT
          echo "Image size: ${SIZE_MB}MB"

          if [ $SIZE_MB -gt 300 ]; then
            echo "warning=true" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è  Warning: Image size (${SIZE_MB}MB) exceeds 300MB"
          fi

      - name: Start services with Docker Compose
        run: |
          # Use the PR image instead of building again
          docker tag task-api:pr-${{ github.event.pull_request.number }} task-api:latest
          docker-compose up -d

      - name: Wait for API to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:8080/actuator/health; do sleep 2; done'

      - name: Run integration tests
        run: |
          # Run the test script
          chmod +x test-api.sh
          ./test-api.sh

      - name: Stop services
        if: always()
        run: docker-compose down -v

      - name: Comment on PR with image size warning
        if: steps.image-size.outputs.warning == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const sizeMb = '${{ steps.image-size.outputs.size_mb }}';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚ö†Ô∏è  **Docker image size warning**\n\nThe Docker image size is ${sizeMb}MB, which exceeds the recommended 300MB threshold. Consider optimizing the image size.`
            })

      - name: Comment on PR with success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚úÖ **All PR checks passed successfully!**'
            })
