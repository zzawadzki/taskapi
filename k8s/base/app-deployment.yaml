# Deployment for Task API application
# Runs multiple replicas of the application with health checks
apiVersion: apps/v1
kind: Deployment
metadata:
  name: taskapi-app
  namespace: taskapi
spec:
  replicas: 2  # Run 2 instances for learning about scaling
  selector:
    matchLabels:
      app: taskapi
  template:
    metadata:
      labels:
        app: taskapi
    spec:
      containers:
      - name: taskapi
        image: taskapi:v1.0
        imagePullPolicy: Never  # Use local image built with Docker
        ports:
        - containerPort: 8080
          name: http
        # Environment variables for Spring Boot configuration
        env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:postgresql://postgres:5432/taskapi_db
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: JWT_SECRET
        - name: JWT_EXPIRATION
          value: "86400000"  # 24 hours in milliseconds
        # Resource limits and requests
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 512Mi
        # Liveness probe - checks if application is running
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        # Readiness probe - checks if application is ready to serve traffic
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        # Startup probe - allows more time for application startup
        startupProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10  # Allow up to 100 seconds for startup
